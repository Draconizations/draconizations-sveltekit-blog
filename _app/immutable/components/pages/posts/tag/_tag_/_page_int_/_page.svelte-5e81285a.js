import{S as N,i as T,s as $,k as O,q as E,a as I,v as q,l as S,m as b,r as k,h as y,c as w,w as B,n as C,b as M,D as u,x as A,u as j,f as D,t as F,y as H,M as z}from"../../../../../../chunks/index-5ff0f165.js";import{p as G}from"../../../../../../chunks/stores-4367b6d9.js";import{P as J,a as K,i as L}from"../../../../../../chunks/PageList-30e9e3db.js";import"../../../../../../chunks/singletons-2423852c.js";import"../../../../../../chunks/index-689d7c96.js";function Q(e){let n,a,i,m=e[0].tag+"",l,f,p,h,_,o,g,r,d;return o=new J({props:{currentPage:e[1],amountOfPages:e[3],path:e[4]}}),r=new K({props:{posts:e[2]}}),{c(){n=O("section"),a=O("h2"),i=E("Posts tagged #"),l=E(m),f=I(),p=O("a"),h=E("Back to tag catalog"),_=I(),q(o.$$.fragment),g=I(),q(r.$$.fragment),this.h()},l(t){n=S(t,"SECTION",{class:!0});var s=b(n);a=S(s,"H2",{});var c=b(a);i=k(c,"Posts tagged #"),l=k(c,m),c.forEach(y),f=w(s),p=S(s,"A",{href:!0});var P=b(p);h=k(P,"Back to tag catalog"),P.forEach(y),_=w(s),B(o.$$.fragment,s),s.forEach(y),g=w(t),B(r.$$.fragment,t),this.h()},h(){C(p,"href","/posts/tag"),C(n,"class","center")},m(t,s){M(t,n,s),u(n,a),u(a,i),u(a,l),u(n,f),u(n,p),u(p,h),u(n,_),A(o,n,null),M(t,g,s),A(r,t,s),d=!0},p(t,[s]){(!d||s&1)&&m!==(m=t[0].tag+"")&&j(l,m);const c={};s&2&&(c.currentPage=t[1]),s&8&&(c.amountOfPages=t[3]),s&16&&(c.path=t[4]),o.$set(c);const P={};s&4&&(P.posts=t[2]),r.$set(P)},i(t){d||(D(o.$$.fragment,t),D(r.$$.fragment,t),d=!0)},o(t){F(o.$$.fragment,t),F(r.$$.fragment,t),d=!1},d(t){t&&y(n),H(o),t&&y(g),H(r,t)}}}function R(e,n,a){let i,m,l,f,p,h,_,o;z(e,G,r=>a(8,o=r));let{data:g}=n;return e.$$set=r=>{"data"in r&&a(0,g=r.data)},e.$$.update=()=>{e.$$.dirty&256&&a(7,i=o.url.pathname.split("/")),e.$$.dirty&128&&a(1,m=parseInt(i[i.length-1])),e.$$.dirty&128&&a(4,l="/posts/tag/"+i[i.length-2]),e.$$.dirty&2&&a(5,f=m*L),e.$$.dirty&32&&a(6,p=f-L),e.$$.dirty&1&&a(3,h=Math.ceil(g.posts.length/L)),e.$$.dirty&97&&a(2,_=g.posts.slice(p,f))},[g,m,_,h,l,f,p,i,o]}class Z extends N{constructor(n){super(),T(this,n,R,Q,$,{data:0})}}export{Z as default};
